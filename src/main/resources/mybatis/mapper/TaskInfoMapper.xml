<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
	例如namespace="me.gacl.mapping.orderMapper"就是me.gacl.mapping(包名)+orderMapper(orderMapper.xml文件去除后缀)
-->
<!-- 手机数据映射 -->
<mapper namespace="com.carl.demo.mapper.ITaskInfoMapper">

    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <resultMap id="taskInfoResultMap" type="com.carl.demo.entity.TaskInfo" >
        <!-- 用id属性来映射主键字段 -->
        <id property="mInd" column="_id" jdbcType="INTEGER" />
        <!-- 用result属性来映射非主键字段 -->
        <result property="mChanNo" column="task_ch_info_ind" />
        <result property="mTaskId" column="task_id" />
        <result property="mTaskType" column="task_type" />
        <result property="mTaskDesc" column="task_desc" />
        <result property="mTaskState" column="task_state" />
        <result property="mTaskTotalCount" column="task_total_count" />
        <result property="mTaskFinishedCount" column="task_finished_count" />
        <result property="mScriptId" column="task_script_id" />
        <result property="mForTest" column="for_test" />
        <result property="mTaskCaps" column="task_caps" />
        <result property="mTaskDoneCount" column="task_done_count" />
        <result property="mCreateTime" column="create_time" />
    </resultMap>

    <!--通过<resultMap>映射实体类属性名和表的字段名对应关系 -->
    <parameterMap id="taskInfoParamMap" type="com.carl.demo.entity.TaskInfo" >
        <parameter property="mInd" resultMap="taskInfoResultMap" />
        <!-- 用result属性来映射非主键字段 -->
        <parameter property="mTaskId" resultMap="taskInfoResultMap" />
        <parameter property="mTaskType" resultMap="taskInfoResultMap" />
        <parameter property="mTaskDesc" resultMap="taskInfoResultMap" />
        <parameter property="mTaskState" resultMap="taskInfoResultMap" />
        <parameter property="mTaskTotalCount" resultMap="taskInfoResultMap" />
        <parameter property="mTaskFinishedCount" resultMap="taskInfoResultMap" />
        <parameter property="mScriptId" resultMap="taskInfoResultMap" />
        <parameter property="mForTest" resultMap="taskInfoResultMap" />
        <parameter property="mTaskCaps" resultMap="taskInfoResultMap" />
        <parameter property="mTaskDoneCount" resultMap="taskInfoResultMap" />
        <parameter property="mCreateTime" resultMap="taskInfoResultMap" />
    </parameterMap>

    <!-- 新增任务信息 -->
    <!-- useGeneratedKeys="true" 表示给主键设置自增长 -->
    <!-- keyProperty="userId"  表示将自增长后的Id赋值给实体类中的userId字段。 -->
    <insert id="addTask" useGeneratedKeys="true" keyProperty="info.mInd" keyColumn="_id"
            parameterType="com.carl.demo.entity.TaskInfo" parameterMap="taskInfoParamMap">
        insert into ${tableName} (create_time, task_id, task_type, task_desc, task_state,
        task_total_count, task_finished_count, task_script_id, for_test)
        values
        (NOW(), #{info.mTaskId}, #{info.mTaskType}, #{info.mTaskDesc}, #{info.mTaskState},
        #{info.mTaskTotalCount}, #{info.mTaskFinishedCount}, #{info.mScriptId},
        #{info.mForTest})
    </insert>

    <!-- 根据序列号查询任务信息 -->
    <select id="findRecordByIndex" parameterType="int" resultMap="taskInfoResultMap">
        select * from ${tableName} where _id=#{ind}
    </select>

    <!-- 根据任务id查询任务信息 -->
    <select id="findRecordById" parameterType="java.lang.String" resultMap="taskInfoResultMap">
        select * from ${tableName} where task_id=#{id}
    </select>

    <!-- 根据序列号更新任务信息 -->
    <update id="updateRecordByInd" parameterType="com.carl.demo.entity.TaskInfo" parameterMap="taskInfoParamMap">
        update ${tableName} t set t.task_id=#{info.mTaskId}, t.task_type=#{info.mTaskType}, t.task_desc=#{info.mTaskDesc},
        t.task_state=#{info.mTaskState}, t.task_total_count=#{info.mTaskTotalCount},
        t.task_finished_count=#{info.mTaskFinishedCount}, t.task_script_id=#{info.mScriptId} ,
        t.task_caps=#{info.mTaskCaps},t.task_done_count=#{info.mTaskDoneCount},
        t.for_test=#{info.mForTest}
        where t._id=#{ind}
    </update>

    <!-- 根据任务Id更新任务信息 -->
    <update id="updateRecordByTaskId" parameterType="com.carl.demo.entity.TaskInfo" parameterMap="taskInfoParamMap">
        update ${tableName} t set t.task_id=#{info.mTaskId}, t.task_type=#{info.mTaskType}, t.task_desc=#{info.mTaskDesc},
        t.task_state=#{info.mTaskState}, t.task_total_count=#{info.mTaskTotalCount},
        t.task_finished_count=#{info.mTaskFinishedCount}, t.task_script_id=#{info.mScriptId},
         t.task_caps=#{info.mTaskCaps},t.task_done_count=#{info.mTaskDoneCount},
        t.for_test=#{info.mForTest}
        where t.task_id=#{id}
    </update>

    <!-- 根据任务Id更新任务完成数字段 -->
    <update id="updateTaskFinishedCount">
        update ${tableName} t set t.task_finished_count=#{finish}
        where t.task_id=#{id}
    </update>

    <update id="updateTaskDoneCount">
        update ${tableName} t set t.task_done_count=#{finish}
        where t.task_id=#{id}
    </update>


    <!-- 根据ind删除记录 -->
    <delete id="deleteTaskByIndex" parameterType="int">
        delete from ${tableName} where _id=#{ind}
    </delete>

    <!-- 获取所有记录 -->
    <select id="getAllRecords" resultMap="taskInfoResultMap">
        select * from ${tableName}
    </select>

    <!-- 根据类型获取所有记录 -->
    <select id="getTasksByTaskType" parameterType="int" resultMap="taskInfoResultMap">
        select * from ${tableName} where for_test=#{type}
    </select>

    <!-- 根据脚本id查询所有任务 -->
    <select id="findTaskListByScriptIds" parameterType="java.util.List" resultMap="taskInfoResultMap">
        select * from ${tableName}
        where task_script_id in
        <foreach collection="scriptIds" index="index" item="op" open="(" separator="," close=")">
            #{op}
        </foreach>
    </select>

</mapper>